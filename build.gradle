plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
	id 'groovy'
	id 'jacoco'
}

group = 'com.lhgpds'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExtensions
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

jacoco {
	toolVersion = '0.8.7'
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	// spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop:2.7.5'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// aws S3
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.322'

	// Oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// db
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	// map struct
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	//lombok
	compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'
	testCompileOnly 'org.projectlombok:lombok:1.18.12'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

	// spock
	testImplementation 'org.spockframework.spock:spock-core:spock-2.3'
	testImplementation 'org.spockframework.spock:spock-spring:spock-2.3'

	// rest docs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

jacocoTestReport {
	reports {
		html.enabled(true)
		xml.enabled(true)
		csv.enabled(false)
	}
	dependsOn test

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					excludes: [] + ["**/mapper", "**/dto", "**/oauth2"])
		}))
	}

	finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = true
			element = 'CLASS' // 클래스 단위로 커버리지 체크

//			// 라인 커버리지 제한을 50% 설정
//			limit {
//				counter = 'LINE'
//				value = 'COVEREDRATIO'
//				minimum = 0.2
//			}

			// 빈 줄을 제외한 코드의 라인수를 최대 200라인으로 제한합니다.
			limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
				maximum = 200
			}
			excludes = [] + ["**/mapper", "/**/dto", "/**/oauth2"]
		}


	}
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExtensions'
	dependsOn test

	sources {
		include("index.adoc")
	}

	baseDirFollowsSourceDir()
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
	finalizedBy 'jacocoTestReport'
}

bootJar {
	dependsOn asciidoctor
	from('build/docs/asciidoc/') {
		into 'static/docs'
	}
}